(require "asdf")

(defun add-pos (pos increment)
  (list (+ (first pos) (first increment)) (+ (second pos) (second increment))))

(with-open-file (stream "input.txt")
  (let ((visited (make-hash-table :test #'equal)) (min-steps 99999999))
    (flet ((follow-line (fn &aux (pos '(0 0)) (steps 0))
        (dolist (command (uiop:split-string (read-line stream) :separator ","))
          (let ((increment (case (char command 0) (#\R '(1 0)) (#\U '(0 -1)) (#\L '(-1 0)) (#\D '(0 1)))))
            (dotimes (i (parse-integer (subseq command 1)))
              (setq pos (add-pos pos increment))
              (incf steps)
              (funcall fn pos steps))))))
      (follow-line (lambda (pos steps)
        (if (null (gethash pos visited)) (setf (gethash pos visited) steps))))
      (follow-line (lambda (pos steps)
        (let ((first-steps (gethash pos visited)))
          (if (not (null first-steps)) (setq min-steps (min min-steps (+ first-steps steps)))))))
      (print min-steps)
    )))
